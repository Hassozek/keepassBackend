<?php

namespace ContainerXxKThnb;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFolderDataPersisterService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\DataPersister\FolderDataPersister' shared autowired service.
     *
     * @return \App\DataPersister\FolderDataPersister
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/core/src/State/ProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/src/DataPersister/FolderDataPersister.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Security.php';

        return $container->privates['App\\DataPersister\\FolderDataPersister'] = new \App\DataPersister\FolderDataPersister(($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), new \Symfony\Bundle\SecurityBundle\Security(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'security.token_storage' => ['privates', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'security.authorization_checker' => ['privates', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.authenticator.managers_locator' => ['privates', 'security.authenticator.managers_locator', 'getSecurity_Authenticator_ManagersLocatorService', true],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'security.firewall.map' => ['privates', 'security.firewall.map', 'getSecurity_Firewall_MapService', false],
            'security.user_checker_locator' => ['privates', 'security.user_checker_locator', 'getSecurity_UserCheckerLocatorService', true],
            'security.firewall.event_dispatcher_locator' => ['privates', 'security.firewall.event_dispatcher_locator', 'getSecurity_Firewall_EventDispatcherLocatorService', true],
            'security.csrf.token_manager' => ['privates', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', false],
        ], [
            'security.token_storage' => '?',
            'security.authorization_checker' => '?',
            'security.authenticator.managers_locator' => '?',
            'request_stack' => '?',
            'security.firewall.map' => '?',
            'security.user_checker_locator' => '?',
            'security.firewall.event_dispatcher_locator' => '?',
            'security.csrf.token_manager' => '?',
        ]), ['dev' => NULL, 'api' => new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'security.authenticator.jwt.api' => ['privates', 'security.authenticator.jwt.api', 'getSecurity_Authenticator_Jwt_ApiService', true],
        ], [
            'security.authenticator.jwt.api' => '?',
        ]), 'main' => new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'security.authenticator.json_login.main' => ['privates', 'security.authenticator.json_login.main', 'getSecurity_Authenticator_JsonLogin_MainService', true],
        ], [
            'security.authenticator.json_login.main' => '?',
        ])]));
    }
}
